"use strict";(self.webpackChunkaiconfig_docs=self.webpackChunkaiconfig_docs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docSidebar":[{"type":"link","label":"What is AIConfig","href":"/docs/basics","docId":"basics","unlisted":false},{"type":"link","label":"Getting Started","href":"/docs/getting-started","docId":"getting-started","unlisted":false},{"type":"link","label":"AIConfig Editor","href":"/docs/editor","docId":"editor","unlisted":false},{"type":"category","label":"Overview","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"AIConfig Specification","href":"/docs/overview/ai-config-format","docId":"overview/ai-config-format","unlisted":false},{"type":"link","label":"Create an AIConfig","href":"/docs/overview/create-an-aiconfig","docId":"overview/create-an-aiconfig","unlisted":false},{"type":"link","label":"Define a Prompt Chain","href":"/docs/overview/define-prompt-chain","docId":"overview/define-prompt-chain","unlisted":false},{"type":"link","label":"Passing Data into Prompts","href":"/docs/overview/parameters","docId":"overview/parameters","unlisted":false},{"type":"link","label":"Run a Prompt","href":"/docs/overview/run-aiconfig","docId":"overview/run-aiconfig","unlisted":false},{"type":"link","label":"Tracing and Monitoring","href":"/docs/overview/monitoring-aiconfig","docId":"overview/monitoring-aiconfig","unlisted":false},{"type":"link","label":"Supported Models","href":"/docs/overview/model-parsers","docId":"overview/model-parsers","unlisted":false}],"href":"/docs/category/overview"},{"type":"link","label":"Gradio Notebooks","href":"/docs/gradio-notebook","docId":"gradio-notebook","unlisted":false},{"type":"link","label":"Cookbooks & Guides","href":"/docs/cookbooks","docId":"cookbooks","unlisted":false},{"type":"link","label":"Extensibility","href":"/docs/extensibility","docId":"extensibility","unlisted":false},{"type":"link","label":"Contributing Guidelines","href":"/docs/contributing","docId":"contributing","unlisted":false},{"type":"link","label":"Roadmap","href":"/docs/roadmap","docId":"roadmap","unlisted":false}]},"docs":{"basics":{"id":"basics","title":"What is AIConfig","description":"AIConfig is a source-control friendly way to manage your prompts, models and model parameters as configs. It allows you to store and iterate on generative AI model behavior separately from your application code.","sidebar":"docSidebar"},"contributing":{"id":"contributing","title":"Contributing Guidelines","description":"\ud83d\udc4b Welcome and thank you for your interest in contributing to AIConfig!","sidebar":"docSidebar"},"cookbooks":{"id":"cookbooks","title":"Cookbooks & Guides","description":"The cookbooks directly in the repo contains a range of examples to demonstrate the capabilities of AIConfig.","sidebar":"docSidebar"},"editor":{"id":"editor","title":"AIConfig Editor","description":"AIConfig Editor is a locally hosted playground where you can visually create and edit prompts stored as AIConfig JSON files. The editor is model-agnostic, multimodal, and extensible by design - it can support any generative AI model with text, image, and audio modalities. You can quickly transition from prototype to production using the AIConfig generated from AIConfig Editor. The AIConfig SDK enables you to execute the prompts and model parameters from the AIConfig in your application code.","sidebar":"docSidebar"},"extensibility":{"id":"extensibility","title":"Extensibility","description":"AIConfig is designed to be customized and extended for your use-case. There are some key extension points for AIConfig:","sidebar":"docSidebar"},"getting-started":{"id":"getting-started","title":"Getting Started","description":"AIConfig is a framework that makes it easy to build generative AI applications for production. It manages generative AI prompts and model parameters as JSON-serializable configs that can be version controlled, evaluated, and opened in a local editor for rapid prototyping. Please read AIConfig Basics to learn more.","sidebar":"docSidebar"},"gradio-notebook":{"id":"gradio-notebook","title":"Gradio Notebooks","description":"Gradio Notebook is a notebook component for generative AI that offers the fastest way to create a Hugging Face space in < 10 lines of code, and a familiar notebook interface for interacting with any combination of text, image and audio models in a single space.","sidebar":"docSidebar"},"overview/ai-config-format":{"id":"overview/ai-config-format","title":"AIConfig Specification","description":"Introduction","sidebar":"docSidebar"},"overview/create-an-aiconfig":{"id":"overview/create-an-aiconfig","title":"Create an AIConfig","description":"There are 2 ways to create an aiconfig from scratch.","sidebar":"docSidebar"},"overview/define-prompt-chain":{"id":"overview/define-prompt-chain","title":"Define a Prompt Chain","description":"What are prompt chains","sidebar":"docSidebar"},"overview/model-parsers":{"id":"overview/model-parsers","title":"Supported Models","description":"| Provider | Model | Language | Support |","sidebar":"docSidebar"},"overview/monitoring-aiconfig":{"id":"overview/monitoring-aiconfig","title":"Tracing and Monitoring","description":"Event callbacks provide in-depth tracing of aiconfig operations, and allow hooks for debuggability and monitoring.","sidebar":"docSidebar"},"overview/parameters":{"id":"overview/parameters","title":"Passing Data into Prompts","description":"Passing data into prompts is fundamental to aiconfig. It allows you to store prompt templates as the config, and resolve the template into a prompt by passing in data.","sidebar":"docSidebar"},"overview/run-aiconfig":{"id":"overview/run-aiconfig","title":"Run a Prompt","description":"TLDR: Call config.run(\\"prompt_name\\").","sidebar":"docSidebar"},"roadmap":{"id":"roadmap","title":"Roadmap","description":"This project is under active development.","sidebar":"docSidebar"}}}')}}]);